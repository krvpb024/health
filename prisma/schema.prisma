datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  password String
  profile  profile?
  session  session[]
}

model session {
  id         String            @id
  account    account           @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  account_id Int
  expire_at  DateTime          @default(dbgenerated("(now() + '31 days'::interval)")) @db.Timestamptz
  session    session_message[]
}

model session_message {
  id         String   @id
  session    session  @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  session_id String
  content    String
  expire_at  DateTime @default(dbgenerated("(now() + '5 minutes'::interval)")) @db.Timestamptz
}

model profile {
  id            Int             @id @default(autoincrement())
  account       account         @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  account_id    Int             @unique
  gender        Boolean /// True -> Male, False -> Female
  birth_date    DateTime        @db.Date
  init_height   Int
  health_record health_record[]
}

model health_record {
  id                  Int                     @id @default(autoincrement())
  profile             profile                 @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profile_id          Int
  height              Int
  weight              Unsupported("NUMERIC")
  body_fat_percentage Unsupported("NUMERIC")?
  waistline_cm        Unsupported("NUMERIC")?
  record_at           DateTime                @default(now()) @db.Timestamptz
}
